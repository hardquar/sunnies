{
	"extends": [
		"eslint:recommended",
		"plugin:react/recommended",
		"plugin:@typescript-eslint/recommended",
	],
	"env": {
		"node": true,
		"es6": true,
		"jest": true,
		"browser": true
	},
	"parser": "@typescript-eslint/parser",
	"plugins": [
		"@typescript-eslint",
		"react",
		"lodash",
		"promise",
	],
	"parserOptions": {
		"project": "./tsconfig.json",
		"sourceType": "module",
		"ecmaVersion": 2018,
		"ecmaFeatures": {
			"jsx": true
		}
	},
	"settings": {
		"react": {
			"version": "detect"
		}
	},
	"rules": {

		// ESLint

		// Replaces the need for Prettier
		"max-len": ["error", { "code": 300 }],
		"semi": ["error", "never"],
		"indent": ["error", "tab", { "ignoreComments": true }],
		"quotes": ["error", "single"],
		"jsx-quotes": ["error", "prefer-single"],
		"comma-dangle": ["error", "only-multiline"],
		"object-curly-spacing": ["error", "always"],
		"array-bracket-spacing": ["error", "never"],
		"arrow-parens": ["error", "always"],

		// ESLint (cont'd)
		"no-case-declarations": "error",
		"no-class-assign": "error",
		"no-cond-assign": "error",
		"no-console": [1, { "allow": ["warn", "error", "info"] }],
		"no-constant-condition": "error",
		"no-empty": "error",
		"no-empty-pattern": "error",
		"no-extra-semi": 0,
		"no-global-assign": "error",
		"no-inner-declarations": "error",
		"no-invalid-regexp": "error",
		"no-mixed-requires": "error",
		"no-mixed-spaces-and-tabs": "error",
		"no-negated-in-lhs": "error",
		"no-new-require": "error",
		"no-path-concat": "error",
		"no-proto": "error",
		"no-regex-spaces": "error",
		"no-restricted-modules": ["error", "sys", "_linklist"],
		"no-sparse-arrays": "error",
		"no-undef": "error",
		"no-unexpected-multiline": "off",
		"no-unsafe-finally": "error",
		"no-unsafe-negation": "error",
		"no-unused-vars": "off", // using typescript plugin instead
		"constructor-super": "error",
		"prefer-const": "error",
		"quote-props": "off",
		"require-yield": "error",
		"linebreak-style": ["error", "unix"],

		// TypeScript-ESLint
		"@typescript-eslint/no-unused-vars": ["error", { "args": "none" }], // this ignores the unused var error for TS interfaces
		"@typescript-eslint/no-use-before-define": "off",
		"@typescript-eslint/camelcase": "warn",
		"@typescript-eslint/interface-name-prefix": "off",
		"@typescript-eslint/array-type": ["error", "array-simple"],
		"@typescript-eslint/explicit-function-return-type": "off",
		// "@typescript-eslint/indent": ["error", "tab", { "ignoreComments": true }],
		"@typescript-eslint/indent": "off",

		// Promise
		"promise/always-return": "off",
		"promise/catch-or-return": "error",
		"promise/param-names": "error",

		// Lodash
		"lodash/chaining": "off",

		// React
		"react/jsx-closing-bracket-location": "error",
		"react/jsx-uses-react": "error",
		"react/jsx-key": "error",
		"react/jsx-uses-vars": "error",
		"react/prop-types": "error",
		"react/react-in-jsx-scope": "error",
		"react/display-name": "off",
		"react/no-unescaped-entities": "off",
	}
}
